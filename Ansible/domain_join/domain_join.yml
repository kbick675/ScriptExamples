---
- name: Install and configure AD auth
  hosts: ntpservers
  become: yes
  become_method: sudo
  vars:
    ad_login_test_user: 'linuxtestuser'
    ad_domain: 'domain.com'
    ad_sudoers_group: 'ADSudoers'
    ad_ou: 'OU=Datacenter,OU=Servers,DC=domain,DC=com'
  vars_prompt:
    - name: "bind_user"
      prompt: "Username for AD Admin"
    - name: "bind_password"
      prompt: "Password for AD Admin"
      private: yes
  
  tasks:
    - name: Install ad_auth tools
      yum:
        name: "{{ packages }}"
        state: installed
      vars:
        packages:
        - realmd
        - samba
        - samba-common
        - samba-common-tools
        - oddjob
        - oddjob-mkhomedir
        - sssd
        - adcli
        - krb5-workstation
        - openldap-clients
        - policycoreutils-python
      notify:
         - restart realmd

    - name: Check if machine is bound
      shell: /bin/bash -c "getent passwd {{ ad_login_test_user }}@{{ ad_domain }} | grep {{ ad_login_test_user }}"
      resgister: realmd_bound
      changed_when: false
      ignore_errors: true

    - name: Install pexpect using pip
      pip:
        name: pexpect

    - name: Discover realm
      shell: /bin/bash -c "/usr/sbin/realm discover {{ ad_domain }}"
      when: realmd_bound|failed

    - name: Join to AD
      expect: 
        command: /bin/bash -c "/usr/sbin/realm join --user={{ bind_user }} --os-name=$ID --os-version=$VERSION  --computer-ou={{ ad_ou }}" 
        responses:
          Password for *: "{{ bind_password }}"
      no_log: true
      when: realmd_bound|failed

    - name: Add sudoers group to sudoers
      lineinfile:
        path: /etc/sudoers
        regexp: '^# User_Alias '
        insertafter: '^# User_Alias '
        line: "%{{ ad_domain }}\\{{ ad_sudoers_group }} ALL=(ALL) ALL"
        validate: '/usr/sbin/visudo -cf %s'
      tags: sudoers

    - name: Setup SSH for kerberos
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - { regexp: '^#KerberosAuthentication', line: 'KerberosAuthentication yes' }
        - { regexp: '^#GSSAPIAuthentication', line: 'GSSAPIAuthentication yes' }
        - { regexp: '^#GSSAPICleanupCredentials', line: 'GSSAPICleanupCredentials yes' }
      notify:
        - restart_sshd
      tags: sshd

    - name: Configure sssd for homedirs
      lineinfile:
        path: /etc/sssd/sssd.conf
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - { regexp: '^use_fully_qualified_names = True$', line: 'use_fully_qualified_names = False' }
        - { regexp: '^fallback_homedir = /home/%u@%d$', line: 'fallback_homedir = /home/%u' }

  handlers:
    - name: restart_sshd
      systemd: 
        name: sshd 
        state: restarted
      tags: sshd
      
